package threeSum;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Solution {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}
	
    public List<List<Integer>> threeSum(int[] nums) {
        List<Integer> result = new ArrayList<Integer>();
        List<List<Integer>> resultSet = new ArrayList<List<Integer>>();
        
        int len = nums.length;
        int idx = 0;
        int sum;
        int[] data = new int[3];
        threeSumUtil(nums, len, 0, data, 0, resultSet);
        /*
        for (int i=0;i<len;i++){
            for (int j=0;j<len;j++){
                for(int k=0;k<len;k++){
                    if ((i!=j)&&(j!=k)&(k!=i)){
                        sum = nums[i] + nums[j] + nums[k];
                        if (sum==0){
                            result = Arrays.asList(nums[i], nums[j], nums[k]);
                            resultSet.add(result);
                            //result.clear();
                        }
                    }
                    
                }
            }
        }
        */
        
        return resultSet;
    }
    
    public void threeSumUtil(int[] nums, int len, int i, int[] data, int idx, List<List<Integer>> resultSet){
        if (idx==3){
            int sum = 0;
            
            System.out.println("data all : " + Arrays.toString(data));
            for(int j=0;j<3;j++){
                sum += data[j];
            }
            
            if (sum==0){
                System.out.println("Found");
                System.out.println("data is" + Arrays.toString(data));
                Arrays.sort(data);
                
                System.out.println("Sorted data is" + Arrays.toString(data));
                System.out.println("resultSet is" + Arrays.toString(resultSet.toArray()));
                
                boolean unique = false;
                for (List<Integer> item : resultSet){
                    int[] tmp = item.stream().mapToInt(k->k).toArray();
                    
                    if (Arrays.equals(tmp, data)){
                        unique = false;
                        System.out.println("Sorted data exists");
                        break;
                    }
                    else {
                        System.out.println("Sorted data doesn't exist");
                        unique = true;
                    }
                }
                
                // adding item is outside iter loop due to ConcurrentModificationException 
                if (resultSet.size()==0 || unique) {
                    System.out.println("resultSet.size() : " + resultSet.size());
                    System.out.println("unique is : " + unique);
                    System.out.println("Sorted data added");
                    resultSet.add(Arrays.stream(data)
                         .boxed()
                         .collect(Collectors.toList()));
                }
                
               
            }
            return;
        }
        
        if (i>=len)
            return;
        
        // i elm included
        data[idx] = nums[i];
        threeSumUtil(nums, len, i+1, data, idx+1, resultSet);
        
        // i elm excluded
        threeSumUtil(nums, len, i+1, data, idx, resultSet);
        
    }

}
