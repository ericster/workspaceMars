package threeSum;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Solution {

	public static void main(String[] args) {
        int idx = 0;
        int sum;
        int[] data = new int[3];
        int[] nums = {3,0,-2,-1,1,2};
        //Arrays.sort(nums);
        int len = nums.length;
        List<List<Integer>> resultSet = null;
        threeSumUtil(nums, len, 0, data, 0);
        List<int[]> resultList = new ArrayList<>();
        combinations(3, nums, resultList);
	}
	
	public static void combinations(int n, int[] arr, List<int[]> list) {
	    // Calculate the number of arrays we should create
	    int numArrays = (int)Math.pow(arr.length, n);
	    // Create each array
	    for(int i = 0; i < numArrays; i++) {
	        int[] current = new int[n];
	        // Calculate the correct item for each position in the array
	        for(int j = 0; j < n; j++) {
	            // This is the period with which this position changes, i.e.
	            // a period of 5 means the value changes every 5th array
	            int period = (int) Math.pow(arr.length, n - j - 1);
	            // Get the correct item and set it
	            int index = i / period % arr.length;
	            current[j] = arr[index];
	        }
	        list.add(current);
	    }
	}
	
	/*
    public static List<List<Integer>> threeSum(int[] nums) {
        List<Integer> result = new ArrayList<Integer>();
        List<List<Integer>> resultSet = new ArrayList<List<Integer>>();
        
        int len = nums.length;
        int idx = 0;
        int sum;
        int[] data = new int[3];
        threeSumUtil(nums, len, 0, data, 0, resultSet);
        return resultSet;
    }
    */
    
    public static void threeSumUtil(int[] nums, int len, int i, int[] data, int idx){
        if (idx==3){
            int sum = 0;
            
            System.out.println("data all : " + Arrays.toString(data));
            for(int j=0;j<3;j++){
                sum += data[j];
            }
            
            if (sum==0){
                System.out.println("Found");
                System.out.println("data is" + Arrays.toString(data));
                Arrays.sort(data);
                
                System.out.println("Sorted data is" + Arrays.toString(data));
                //System.out.println("resultSet is" + Arrays.toString(resultSet.toArray()));
            }
            return;
        }
        
        if (i>=len)
            return;
        
        // i elm included
        data[idx] = nums[i];
        threeSumUtil(nums, len, i+1, data, idx+1);
        
        // i elm excluded
        threeSumUtil(nums, len, i+1, data, idx);
        
    }

}
